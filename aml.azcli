RESOURCE_GROUP='OpenAI-Demo'
VNET_NAME='vnet-1'
PV_SUBNET_NAME='PrivateLink-Subnet'
KEYVAULT_NAME=$(az keyvault list --resource-group $RESOURCE_GROUP --query [0].id -o tsv)
ACR_NAME="$(az acr list --resource-group $RESOURCE_GROUP --query [0].id -o tsv)"
STORAGE_NAME="$(az storage account list --resource-group $RESOURCE_GROUP --query [0].id -o tsv)"
OPEN_AI_NAME=$(az cognitiveservices account list --resource-group $RESOURCE_GROUP --query [0].name -o tsv)
SUBSCRIPTION_ID=$(az account show --query id --output tsv)

LOCATION=eastus
IDENTITY_NAME='aml-identity'
WORKSPACE_NAME=$(cat /dev/urandom | tr -dc 'a-z0-9' | fold -w 24 | head -n 1)

# If you get errors you might need to manually add the ml az extension; uncomment line below
# az extension add --name ml

az identity create --name $IDENTITY_NAME --resource-group $RESOURCE_GROUP --location $LOCATION
IDENTITY_ID="$(az identity list --resource-group $RESOURCE_GROUP --query [0].id -o tsv)"

# Create AML WOrkspace passing in Firewall rules via file outbound-firewall-rules.yml to allow out Internet 
az ml workspace create --name $WORKSPACE_NAME --resource-group $RESOURCE_GROUP --public-network-access 'Disabled' --managed-network allow_only_approved_outbound --key-vault $KEYVAULT_NAME --container-registry $ACR_NAME --storage-account $STORAGE_NAME --file outbound-firewall-rules.yml

# Create a PrivateLink Endpoint to OpenAI from AML Workspace
az ml workspace outbound-rule set --workspace-name $WORKSPACE_NAME --resource-group $RESOURCE_GROUP --rule openai --type private_endpoint --service-resource-id subscriptions/$SUBSCRIPTION_ID/resourceGroups/$RESOURCE_GROUP/providers/Microsoft.CognitiveServices/accounts/$OPEN_AI_NAME --subresource-target account

az network private-endpoint create --name aml-privateEndpoint --connection-name aml-connection --resource-group $RESOURCE_GROUP --vnet-name $VNET_NAME --subnet $PV_SUBNET_NAME --private-connection-resource-id $(az ml workspace show --name $WORKSPACE_NAME --resource-group $RESOURCE_GROUP --query id --output tsv) --group-id amlworkspace

az network private-dns zone create --name privatelink.api.azureml.ms --resource-group $RESOURCE_GROUP
az network private-dns link vnet create --name aml-privateDnsLink --resource-group $RESOURCE_GROUP --virtual-network $VNET_NAME --zone-name privatelink.api.azureml.ms --registration-enabled false

az network private-dns zone create --name privatelink.notebooks.azureml.ms --resource-group $RESOURCE_GROUP
az network private-dns link vnet create --name aml-notebooks-privateDnsLink --resource-group $RESOURCE_GROUP --virtual-network $VNET_NAME --zone-name privatelink.notebooks.azureml.ms --registration-enabled false

az network private-dns zone create --name $LOCATION.notebooks.azure.net --resource-group $RESOURCE_GROUP
az network private-dns link vnet create --name aml-notebooks-privateDnsLink --resource-group $RESOURCE_GROUP --virtual-network $VNET_NAME --zone-name $LOCATION.notebooks.azure.net --registration-enabled false

az network private-endpoint dns-zone-group create --endpoint-name aml-privateEndpoint --name aml-dns-zone-group --private-dns-zone $LOCATION.notebooks.azure.net --resource-group $RESOURCE_GROUP --zone-name $LOCATION.notebooks.azure.net
az network private-endpoint dns-zone-group add --endpoint-name aml-privateEndpoint --name aml-dns-zone-group --private-dns-zone privatelink.api.azureml.ms --zone-name privatelink.api.azureml.ms --resource-group $RESOURCE_GROUP
az network private-endpoint dns-zone-group add --endpoint-name aml-privateEndpoint --name aml-dns-zone-group --private-dns-zone privatelink.notebooks.azureml.ms --zone-name privatelink.notebooks.azureml.ms --resource-group $RESOURCE_GROUP
